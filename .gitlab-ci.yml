#test_gcc10_py3_linux:
#    image: gitlab-registry.mpcdf.mpg.de/mpcdf/module-image
#    tags:
#        - disable
#        - docker
#        - avx512
#    variables:
#        BIOEN_OPENMP: 1
#        BIOEN_FAST_CFLAGS: 1
#    before_script:
#        - module purge
#        - module load git
#        - module load gcc/10
#        - module load anaconda/3
#        - module list
#        - export CC=`which gcc`
#        - export CXX=`which g++`
#        - cd third-party
#        - ./install_dependencies.sh
#        - cd ..
#        - python setup.py install --user
#    script:
#        - export PATH=${HOME}/.local/bin:${PATH}
#        # run the test cases
#        - cd test/optimize
#        - for NT in 1 2 4; do OMP_NUM_THREADS=$NT py.test -sv; done
#        - cd -
#        - cd test/deer
#        - ./run_bioen_deer.sh
#        - cd -
#        - cd test/generic
#        - ./run_bioen.sh
#        - cd -
#        - cd test/scattering
#        - ./run_bioen_saxs.sh
#        - cd -
#    only:
#        - branches
#
#test_clang_py3_linux:
#    image: gitlab-registry.mpcdf.mpg.de/mpcdf/module-image
#    tags:
#        - disable
#        - docker
#        - avx512
#    variables:
#        BIOEN_OPENMP: 1
#        BIOEN_FAST_CFLAGS: 1
#    before_script:
#        - module purge
#        - module load git
#        - module load clang
#        - module load anaconda/3
#        - module list
#        - export CC=`which clang`
#        - export CXX=`which clang++`
#        - cd third-party
#        - ./install_dependencies.sh
#        - cd ..
#        - python setup.py install --user
#    script:
#        - export PATH=${HOME}/.local/bin:${PATH}
#        # run the test cases
#        - cd test/optimize
#        - for NT in 1 2 4; do OMP_NUM_THREADS=$NT py.test -sv; done
#        - cd -
#        - cd test/deer
#        - ./run_bioen_deer.sh
#        - cd -
#        - cd test/generic
#        - ./run_bioen.sh
#        - cd -
#        - cd test/scattering
#        - ./run_bioen_saxs.sh
#        - cd -
#    only:
#        - branches

build_wheels_manylinux2014_x86_64:
    image: quay.io/pypa/manylinux2014_x86_64
    tags:
        - docker
    variables:
        # CPYTHONS: "cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310"
        CPYTHONS: "cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39"
        PLAT: "manylinux2014_x86_64"
        CFLAGS: "-O3 -march=nehalem -mtune=haswell -Wno-unknown-pragmas -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -ffunction-sections -pipe"
        BIOEN_CFLAGS: "$CFLAGS"
        BIOEN_OPENMP: "1"
        BIOEN_RPATH: "0"
        #BIOEN_USE_DEFAULT_GSL: "True"
        #BIOEN_USE_DEFAULT_LBFGS: "True"
    script:
        # build GSL and liblbfgs
        - pushd third-party
        - ./install_dependencies.sh
        - popd
        # build bioen and wheels
        - scripts/build_wheels.sh
    only:
        - master
        - develop

